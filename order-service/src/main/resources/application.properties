spring.datasource.driver-class-name= com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order-service
spring.datasource.username=ENC(axarfbVgpCoHkpnRODYOrKLon4YeBna9m9w8QZQAk+nc5lgqXXhmuAHcEJlmmLyz)
spring.datasource.password=ENC(8VsPo+Axi1EuPoBSIfIPab2doZdI6S+lg+YJnSEc3jBZZZs4UZxR2db3EGoOF8/8)
spring.jpa.hibernate.ddl-auto=update
spring.application.name=order-service

eureka.client.serviceUrl.defaultZone=http://eureka:netflix@localhost:8761/eureka

server.port=8081

management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=always

#Resilience4j circuit breaker properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4j timeout properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Resilience4j retry properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

spring.output.ansi.enabled=always
#Micrometer Settings
management.endpoints.web.exposure.include=*
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
# For Exemplars to work we need histogram buckets
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# traceID and spanId are predefined MDC keys - we want the logs to include them
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# Kafka settings
spring.kafka.bootstrap-servers=localhost:9092